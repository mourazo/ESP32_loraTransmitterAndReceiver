unsigned char cobUno[] =
{
  0b00000000, 0b00000000, //                 
  0b00000000, 0b00000000, //                 
  0b00000000, 0b00000000, //                 
  0b00000000, 0b00000000, //                 
  0b00000000, 0b00000000, //                 
  0b00000000, 0b00000000, //                 
  0b00000000, 0b00000000, //                 
  0b00000000, 0b00000000, //                 
  0b00000000, 0b00000000, //                 
  0b00000000, 0b00000000, //                 
  0b00000000, 0b00000000, //                 
  0b00000000, 0b00000000, //                 
  0b00000000, 0b00000000, //                 
  0b01000000, 0b00000000, //  #              
  0b11000000, 0b00000000, // ##              
  0b11000000, 0b00000000, // ##              
};
unsigned char cobDos[] =
{
  0b00000000, 0b00000000, //                 
  0b00000000, 0b00000000, //                 
  0b00000000, 0b00000000, //                 
  0b00000000, 0b00000000, //                 
  0b00000000, 0b00000000, //                 
  0b00000000, 0b00000000, //                 
  0b00000000, 0b00000000, //                 
  0b00000000, 0b00000000, //                 
  0b00000000, 0b00000000, //                 
  0b00000100, 0b00000000, //      #          
  0b00001100, 0b00000000, //     ##          
  0b00011100, 0b00000000, //    ###          
  0b00011100, 0b00000000, //    ###          
  0b01011100, 0b00000000, //  # ###          
  0b11011100, 0b00000000, // ## ###          
  0b11011100, 0b00000000, // ## ###          
};
unsigned char cobTres[] =
{
  0b00000000, 0b00000000, //                 
  0b00000000, 0b00000000, //                 
  0b00000000, 0b00000000, //                 
  0b00000000, 0b00000000, //                 
  0b00000000, 0b00000000, //                 
  0b00000000, 0b01000000, //          #      
  0b00000000, 0b11000000, //         ##      
  0b00000001, 0b11000000, //        ###      
  0b00000001, 0b11000000, //        ###      
  0b00000101, 0b11000000, //      # ###      
  0b00001101, 0b11000000, //     ## ###      
  0b00011101, 0b11000000, //    ### ###      
  0b00011101, 0b11000000, //    ### ###      
  0b01011101, 0b11000000, //  # ### ###      
  0b11011101, 0b11000000, // ## ### ###      
  0b11011101, 0b11000000, // ## ### ###      
};
unsigned char cobCuatro[] =
{
  0b00000000, 0b00000000, //                 
  0b00000000, 0b00000100, //              #  
  0b00000000, 0b00001100, //             ##  
  0b00000000, 0b00011100, //            ###  
  0b00000000, 0b00011100, //            ###  
  0b00000000, 0b01011100, //          # ###  
  0b00000000, 0b11011100, //         ## ###  
  0b00000001, 0b11011100, //        ### ###  
  0b00000001, 0b11011100, //        ### ###  
  0b00000101, 0b11011100, //      # ### ###  
  0b00001101, 0b11011100, //     ## ### ###  
  0b00011101, 0b11011100, //    ### ### ###  
  0b00011101, 0b11011100, //    ### ### ###  
  0b01011101, 0b11011100, //  # ### ### ###  
  0b11011101, 0b11011100, // ## ### ### ###  
  0b11011101, 0b11011100, // ## ### ### ###  
};

unsigned char arrow_up[] =
{
  0b00000001, 0b10000000, //        ##       
  0b00000011, 0b11000000, //       ####      
  0b00000111, 0b11100000, //      ######     
  0b00001111, 0b11110000, //     ########    
  0b00011110, 0b01111000, //    ####  ####   
  0b00111100, 0b00111100, //   ####    ####  
  0b01111000, 0b00011110, //  ####      #### 
  0b11111100, 0b00111111, // ######    ######
  0b11111100, 0b00111111, // ######    ######
  0b01111100, 0b00111110, //  #####    ##### 
  0b00011100, 0b00111000, //    ###    ###   
  0b00011100, 0b00111000, //    ###    ###   
  0b00011100, 0b00111000, //    ###    ###   
  0b00011111, 0b11111000, //    ##########   
  0b00011111, 0b11111000, //    ##########   
  0b00001111, 0b11110000, //     ########    
};

unsigned char arrow_down[] =
{
  0b00001111, 0b11110000, //     ########    
  0b00011111, 0b11111000, //    ##########   
  0b00011111, 0b11111000, //    ##########   
  0b00011100, 0b00111000, //    ###    ###   
  0b00011100, 0b00111000, //    ###    ###   
  0b00011100, 0b00111000, //    ###    ###   
  0b01111100, 0b00111110, //  #####    ##### 
  0b11111100, 0b00111111, // ######    ######
  0b11111100, 0b00111111, // ######    ######
  0b01111000, 0b00011110, //  ####      #### 
  0b00111100, 0b00111100, //   ####    ####  
  0b00011110, 0b01111000, //    ####  ####   
  0b00001111, 0b11110000, //     ########    
  0b00000111, 0b11100000, //      ######     
  0b00000011, 0b11000000, //       ####      
  0b00000001, 0b10000000, //        ##       
};

const unsigned char sequopro[] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xf0, 0x3e, 0x01, 0xfe, 0x01, 0xfe, 0x7f, 0xcf, 0xf0, 0x1f, 0xe0, 0x1f, 0x01, 0xff, 0xc0, 0x7f,
  0xe0, 0x3c, 0x00, 0xf8, 0x00, 0xfc, 0x7f, 0xcf, 0xc0, 0x07, 0xe0, 0x0f, 0x00, 0x7f, 0x07, 0x1f,
  0xc7, 0xfc, 0x7f, 0xf0, 0xf8, 0x7c, 0x7f, 0xcf, 0x87, 0xc3, 0xe3, 0x87, 0x3c, 0x7e, 0x1f, 0x8f,
  0xcf, 0xfc, 0x7f, 0xe1, 0xfe, 0x3c, 0x7f, 0xcf, 0x0f, 0xf1, 0xe3, 0xc7, 0x3e, 0x3c, 0x39, 0xc7,
  0xcf, 0xfc, 0x7f, 0xe3, 0xff, 0x1c, 0x7f, 0xcf, 0x1f, 0xf8, 0xe3, 0xe7, 0x3e, 0x3c, 0x60, 0x47,
  0xc7, 0xfc, 0x7f, 0xc7, 0xff, 0x1c, 0x7f, 0xce, 0x3f, 0xf8, 0xe3, 0xe7, 0x3e, 0x38, 0x60, 0x23,
  0xc3, 0xfc, 0x7f, 0xc7, 0xff, 0x8c, 0x7f, 0xce, 0x3f, 0xfc, 0xe3, 0xc7, 0x3e, 0x38, 0x60, 0x33,
  0xe0, 0x7c, 0x03, 0xc7, 0xff, 0x8c, 0x7f, 0xce, 0x7f, 0xfc, 0x60, 0x0f, 0x00, 0x78, 0xe0, 0x93,
  0xf0, 0x3c, 0x03, 0xc7, 0xff, 0x8c, 0x7f, 0xce, 0x7f, 0xfc, 0x60, 0x1f, 0x00, 0xf8, 0x60, 0x9b,
  0xfe, 0x1c, 0x03, 0xc7, 0xff, 0x8c, 0x7f, 0xce, 0x3f, 0xfc, 0x61, 0xff, 0x11, 0xf8, 0x31, 0x9b,
  0xff, 0x1c, 0x7f, 0xc7, 0xff, 0x9c, 0x7f, 0xce, 0x3f, 0xfc, 0xe3, 0xff, 0x38, 0xf8, 0x00, 0x3b,
  0xff, 0x8c, 0x7f, 0xc7, 0xff, 0x1c, 0x7f, 0xce, 0x3f, 0xf8, 0xe3, 0xff, 0x3c, 0x78, 0x00, 0xfb,
  0xff, 0x8c, 0x7f, 0xe3, 0xff, 0x1e, 0x7f, 0x8f, 0x1f, 0xf8, 0xe3, 0xff, 0x3e, 0x7c, 0x07, 0xf7,
  0xff, 0x8c, 0x7f, 0xf1, 0xfe, 0x3e, 0x3f, 0x8f, 0x0f, 0xf1, 0xe3, 0xff, 0x3e, 0x3f, 0xff, 0xc7,
  0x9f, 0x1c, 0x7f, 0xf0, 0xf8, 0x7e, 0x1f, 0x1f, 0x87, 0xc3, 0xe3, 0xff, 0x3f, 0x1e, 0x00, 0x0f,
  0xc0, 0x1c, 0x00, 0xfc, 0x00, 0xff, 0x00, 0x3f, 0xc0, 0x07, 0xe3, 0xff, 0x3f, 0x8f, 0x00, 0x1f,
  0xc0, 0x7e, 0x00, 0xfe, 0x01, 0xff, 0xc0, 0x7f, 0xf0, 0x1f, 0xe3, 0xff, 0x3f, 0x8f, 0xc0, 0x7f,
  0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xf8, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xfe, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
